1.g++ -D 添加宏定义
例：g++ -DLINUX 编译时添加LINUX宏
2.动态库
动态库在运行时加载动态库代码，因此在编译链接时无法确认代码段中的符号地址（如，引用的全局变量，调用的函数）等。这些符号地址需要由加载器修改，进行重定位，这意味着：
1）动态库的代码段无法在进程间共享，每个引用该动态库的进程都拥有一份该动态库代码的拷贝；
2）代码段必须是可写的，这增加了被攻击的风险。
PIC（位置无关代码）：
1）动态库代码段不需要修改，对于符号地址，在编译时修改为从数据段GOT表中取得，因此加载器在加载后写GOT表，因此：代码段可以在多进程间共享，代码段是只读的。
2）在代码段插入PLT表，对于每次函数调用，初次调用时跳转到PLT对应的代码段，解析参数，由加载器计算函数地址，写GOT，以后每次访问即直接访问GOT中的函数地址。
总结：PIC核心意义在于代码段共享和安全访问。
3.开发一个运算符函数，需要编写一个原型为ConstantSP(Const ConstantSP& a, const ConstantSP& b)的C++函数。开发一个系统函数，需要编写一个原型为ConstantSP(Heap* heap, vector<ConstantSP>& args)的c++函数。
a)ConstantSP是一个封装的智能指针类型，会在变量引用计数为0时自动释放内存，可用以表示大多数DolphinDB对象（标量、向量、矩阵、表等）；
4.c语言static
1)static修饰函数局部变量为静态局部变量，占用进程全局数据区，但其作用域为局部域，当其函数结束时，其作用域也结束；
2)static修饰函数为静态函数，这意味该函数仅在声明它的文件中可见，其他文件不能引用该函数。

